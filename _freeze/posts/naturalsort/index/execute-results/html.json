{
  "hash": "811ff32b37faae8a6f41e1f99603e834",
  "result": {
    "markdown": "---\ntitle: \"Sort numbered strings (or factor levels, or filenames) correctly even without zero-padding\"\n\ndate: \"2024-01-12\"\n\ncategories:\n  - data cleaning\n  - sorting\n---\n<script src=\"/jquery-3.7.0.min.js\"></script>\n<script src=\"/fold.js\"></script>\n<script src=\"/move_session_info.js\"></script>\n\n\n\n\n\n\n\n\n\n\n\n<!-- begin content -->\n\n\n::: {.cell hash='index_cache/html/setup_f406cc97a1aa210701afcdb775ee775a'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Setup\"}\nlibrary(tidyverse)\nlibrary(naturalsort)\n```\n:::\n\n\nIt's quite common to see lists of items (data, files, etc) that are numbered, such as the hypothetical list of files below:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_bd9dd4dbb3bfff83779d3ac5a56dbdc6'}\n\n```{.r .cell-code}\nfilenames <- c(\"file2.csv\", \"file1.csv\",  \"file3.csv\",\n               \"file11.csv\", \"file10.csv\", \"file20.csv\")\nprint(filenames)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"file2.csv\"  \"file1.csv\"  \"file3.csv\"  \"file11.csv\" \"file10.csv\"\n[6] \"file20.csv\"\n```\n:::\n:::\n\n\nIf you want to `sort` these by number, you run into a problem, since the filenames are strings: `1` is followed by `10`, which is followed by `2`, since `10` precedes `2` \"alphabetically\":\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-3_041c9c0d4b41f8bc3fab0cf3149e0567'}\n\n```{.r .cell-code}\nfilenames |> sort()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"file1.csv\"  \"file10.csv\" \"file11.csv\" \"file2.csv\"  \"file20.csv\"\n[6] \"file3.csv\" \n```\n:::\n:::\n\n\nOne solution is to rename your items such that they are zero-padded. A kludge with `stringr`'s `str_replace()`and`str_pad()`can get the job done.  Because of the leading zeros,`sort()` will get the result you expect:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-4_0b4ad8819d1e1b35e8d6a984bcca9a93'}\n\n```{.r .cell-code}\npadded <- str_replace(filenames, \"[0-9]+\", \\(x) str_pad(x, 2, pad=\"0\"))\npadded |> sort()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"file01.csv\" \"file02.csv\" \"file03.csv\" \"file10.csv\" \"file11.csv\"\n[6] \"file20.csv\"\n```\n:::\n:::\n\n\nRather than renaming your items, `naturalsort::naturalsort()` orders your items in \"human natural\" order:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-5_0ca3619554f2ea02482c4f4aca9499f4'}\n\n```{.r .cell-code}\nfilenames |> naturalsort::naturalsort()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"file1.csv\"  \"file2.csv\"  \"file3.csv\"  \"file10.csv\" \"file11.csv\"\n[6] \"file20.csv\"\n```\n:::\n:::\n\n\nThe `naturalsort` package also comes with the command `naturalfactor()`, which can reorder a factor in the same way, or turn an unordered list of strings into a factor:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-6_02ca9ab89d76ed58f675613caba487ab'}\n\n```{.r .cell-code}\nmy_factor <- factor(c(\"level_1\", \"level_10\", \"level_2\"))\nnaturalsort::naturalfactor(my_factor)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] level_1  level_10 level_2 \nLevels: level_1 < level_2 < level_10\n```\n:::\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-7_cace4774e7df13b8b92442d44f676478'}\n\n```{.r .cell-code}\nc(\"level1\", \"level10\", \"level2\") |> naturalfactor()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] level1  level10 level2 \nLevels: level1 < level2 < level10\n```\n:::\n:::\n\n\n<!-- End content -->\n\n\n\n<div id = \"footer-session-info\">\n<details>\n<summary>Session info and package versions</summary>\n::: {.cell hash='index_cache/html/unnamed-chunk-9_e9175bd67460e15c5615e5268fb63de0'}\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n setting  value\n version  R version 4.3.2 (2023-10-31)\n os       macOS Sonoma 14.2.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Chicago\n date     2024-01-12\n pandoc   3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n─ Packages ───────────────────────────────────────────────────────────────────\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n     package loadedversion       date         source\n         cli         3.6.1 2023-03-23 CRAN (R 4.3.2)\n   codetools        0.2-19 2023-02-01 CRAN (R 4.3.2)\n  colorspace         2.1-0 2023-01-23 CRAN (R 4.3.0)\n      digest        0.6.31 2022-12-11 CRAN (R 4.3.0)\n       dplyr         1.1.2 2023-04-20 CRAN (R 4.3.2)\n    evaluate          0.21 2023-05-05 CRAN (R 4.3.2)\n       fansi         1.0.4 2023-01-22 CRAN (R 4.3.2)\n     fastmap         1.1.1 2023-02-24 CRAN (R 4.3.0)\n     forcats         1.0.0 2023-01-29 CRAN (R 4.3.0)\n    generics         0.1.3 2022-07-05 CRAN (R 4.3.0)\n     ggplot2         3.4.2 2023-04-03 CRAN (R 4.3.2)\n        glue         1.6.2 2022-02-24 CRAN (R 4.3.2)\n      gtable         0.3.3 2023-03-21 CRAN (R 4.3.2)\n         hms         1.1.3 2023-03-21 CRAN (R 4.3.0)\n   htmltools         0.5.7 2023-11-03 CRAN (R 4.3.1)\n htmlwidgets         1.6.2 2023-03-17 CRAN (R 4.3.2)\n    jsonlite         1.8.8 2023-12-04 CRAN (R 4.3.1)\n       knitr          1.43 2023-05-25 CRAN (R 4.3.2)\n   lifecycle         1.0.3 2022-10-07 CRAN (R 4.3.2)\n   lubridate         1.9.2 2023-02-10 CRAN (R 4.3.2)\n    magrittr         2.0.3 2022-03-30 CRAN (R 4.3.0)\n     munsell         0.5.0 2018-06-12 CRAN (R 4.3.0)\n naturalsort         0.1.3 2016-08-30 CRAN (R 4.3.0)\n      pillar         1.9.0 2023-03-22 CRAN (R 4.3.0)\n   pkgconfig         2.0.3 2019-09-22 CRAN (R 4.3.0)\n       purrr         1.0.1 2023-01-10 CRAN (R 4.3.2)\n          R6         2.5.1 2021-08-19 CRAN (R 4.3.0)\n        ragg         1.2.5 2023-01-12 CRAN (R 4.3.2)\n       readr         2.1.4 2023-02-10 CRAN (R 4.3.2)\n        renv        0.17.3 2023-04-06 CRAN (R 4.3.0)\n       rlang         1.1.1 2023-04-28 CRAN (R 4.3.2)\n   rmarkdown          2.21 2023-03-26 CRAN (R 4.3.2)\n  rstudioapi          0.14 2022-08-22 CRAN (R 4.3.2)\n      scales         1.2.1 2022-08-20 CRAN (R 4.3.2)\n sessioninfo         1.2.2 2021-12-06 CRAN (R 4.3.0)\n     stringi        1.7.12 2023-01-11 CRAN (R 4.3.2)\n     stringr         1.5.0 2022-12-02 CRAN (R 4.3.2)\n systemfonts         1.0.4 2022-02-11 CRAN (R 4.3.2)\n textshaping         0.3.6 2021-10-13 CRAN (R 4.3.2)\n      tibble         3.2.1 2023-03-20 CRAN (R 4.3.0)\n       tidyr         1.3.0 2023-01-24 CRAN (R 4.3.0)\n  tidyselect         1.2.0 2022-10-10 CRAN (R 4.3.0)\n   tidyverse         2.0.0 2023-02-22 CRAN (R 4.3.0)\n  timechange         0.2.0 2023-01-11 CRAN (R 4.3.0)\n        tzdb         0.4.0 2023-05-12 CRAN (R 4.3.0)\n        utf8         1.2.3 2023-01-31 CRAN (R 4.3.2)\n       vctrs         0.6.2 2023-04-19 CRAN (R 4.3.2)\n       withr         2.5.0 2022-03-03 CRAN (R 4.3.2)\n        xfun          0.39 2023-04-20 CRAN (R 4.3.2)\n        yaml         2.3.7 2023-01-23 CRAN (R 4.3.2)\n```\n:::\n:::\n</details>\n</div>\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/roboto-condensed-0.3.3/css/roboto-condensed.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}