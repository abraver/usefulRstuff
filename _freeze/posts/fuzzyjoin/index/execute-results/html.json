{
  "hash": "41076282105d88ee6a5365891ed93dc1",
  "result": {
    "markdown": "---\ntitle: \"`fuzzyjoin`: Join `df`s with inexact matching\"\n\ndate: \"6/26/23\"\n\ncategories:\n  - dataframes\n  - joins\n  \ntoc: true\n---\n<script src=\"/jquery-3.7.0.min.js\"></script>\n<script src=\"/fold.js\"></script>\n<script src=\"/move_session_info.js\"></script>\n\n\n\n\n\n\n\n\n\n\n\n<!-- begin content -->\n\n\n::: {.cell hash='index_cache/html/setup_b776bcb1cc19d5561a7dbf474281a81b'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Setup\"}\nlibrary(tidyverse)\n```\n:::\n\n\n## Join `df`s by string distance\n\nSometimes you want to join `df`s on fuzzy criteria.  That's where `fuzzyjoin` comes in.  Consider this example lifted partially from the documentation:\n\n\nSet up a `df` with some typos.  We'll join this to `ggplot2::diamonds` by `cut`, which has levels: Fair, Good, Very Good, Premium, Ideal.\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_0af71fa9b420dec8807e2ba3567b5d7e'}\n\n```{.r .cell-code}\n# Create a dataframe with some typos\nd <- data.frame(approximate_name = c(\"Idea\", \"Premiums\", \"Premioom\",\n                                     \"VeryGood\", \"VeryGood\", \"Faiir\"),\n                type = 1:6)\n```\n:::\n\nA regular inner join finds no matches, due to the typos:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-3_4e8ec02490363290b93237a7d653ee23'}\n\n```{.r .cell-code}\ninner_join(diamonds, d, by = c(cut = \"approximate_name\")) |> \n  nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\n`stringdist_inner_join()` however will match strings based on any of the methods available in the `stringdist` package (e.g. Levenshtein distance, Jaccard distance, etc).\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-4_53a0cca2ba3c10637187bd7bb5b669ac'}\n\n```{.r .cell-code}\nfuzzyjoin::stringdist_inner_join(diamonds, d,\n                                 by = c(cut = \"approximate_name\"),\n                                 method = \"lv\", # <1>\n                                 max_dist = 3,\n                                 distance_col = \"distance\") |> \n  relocate(approximate_name, .after = \"cut\") |>  # <2>\n  head(10)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| carat|cut       |approximate_name |color |clarity | depth| table| price|    x|    y|    z| type| distance|\n|-----:|:---------|:----------------|:-----|:-------|-----:|-----:|-----:|----:|----:|----:|----:|--------:|\n|  0.23|Ideal     |Idea             |E     |SI2     |  61.5|    55|   326| 3.95| 3.98| 2.43|    1|        1|\n|  0.21|Premium   |Premiums         |E     |SI1     |  59.8|    61|   326| 3.89| 3.84| 2.31|    2|        1|\n|  0.21|Premium   |Premioom         |E     |SI1     |  59.8|    61|   326| 3.89| 3.84| 2.31|    3|        2|\n|  0.29|Premium   |Premiums         |I     |VS2     |  62.4|    58|   334| 4.20| 4.23| 2.63|    2|        1|\n|  0.29|Premium   |Premioom         |I     |VS2     |  62.4|    58|   334| 4.20| 4.23| 2.63|    3|        2|\n|  0.24|Very Good |VeryGood         |J     |VVS2    |  62.8|    57|   336| 3.94| 3.96| 2.48|    4|        1|\n|  0.24|Very Good |VeryGood         |J     |VVS2    |  62.8|    57|   336| 3.94| 3.96| 2.48|    5|        1|\n|  0.24|Very Good |VeryGood         |I     |VVS1    |  62.3|    57|   336| 3.95| 3.98| 2.47|    4|        1|\n|  0.24|Very Good |VeryGood         |I     |VVS1    |  62.3|    57|   336| 3.95| 3.98| 2.47|    5|        1|\n|  0.26|Very Good |VeryGood         |H     |SI1     |  61.9|    55|   337| 4.07| 4.11| 2.53|    4|        1|\n\n</div>\n:::\n:::\n\n1. Levenshtein distance\n2. Move these columns closer together for easier visual comparison\n\n\n## Join `df`s by regex matches\n\nAlso extremely useful are the `regex_*_join` functions, which join based on whether there is a regex match between columns.  (This example also from [the documentation](http://varianceexplained.org/fuzzyjoin/reference/regex_join.html))\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-5_1f3814ce097b6e221d1f7a66ba105b1f'}\n\n```{.r .cell-code}\nd <- data.frame(regex_name = c(\"^Idea\", \"mium\", \"Good\"), type = 1:3)\n\nfuzzyjoin::regex_inner_join(diamonds, d, by = c(cut = \"regex_name\")) |> \n  relocate(regex_name, .after = cut) |> \n  head()\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| carat|cut       |regex_name |color |clarity | depth| table| price|    x|    y|    z| type|\n|-----:|:---------|:----------|:-----|:-------|-----:|-----:|-----:|----:|----:|----:|----:|\n|  0.23|Ideal     |^Idea      |E     |SI2     |  61.5|    55|   326| 3.95| 3.98| 2.43|    1|\n|  0.21|Premium   |mium       |E     |SI1     |  59.8|    61|   326| 3.89| 3.84| 2.31|    2|\n|  0.23|Good      |Good       |E     |VS1     |  56.9|    65|   327| 4.05| 4.07| 2.31|    3|\n|  0.29|Premium   |mium       |I     |VS2     |  62.4|    58|   334| 4.20| 4.23| 2.63|    2|\n|  0.31|Good      |Good       |J     |SI2     |  63.3|    58|   335| 4.34| 4.35| 2.75|    3|\n|  0.24|Very Good |Good       |J     |VVS2    |  62.8|    57|   336| 3.94| 3.96| 2.48|    3|\n\n</div>\n:::\n:::\n\n\n## Join `df`s by absolute difference between columns\n\nSay you want to join by two columns so long as they are equal within a certain degree of tolerance.  Here we join so long as `sepal_lengths$Sepal.Length` is within 0.5 of the `iris$Sepal.Length`:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-6_57a90a80767692b396b047736462f014'}\n\n```{.r .cell-code}\nsepal_lengths <- data.frame(Sepal.Length = c(5, 6, 7), Type = 1:3)\n\nfuzzyjoin::difference_inner_join(iris, sepal_lengths,\n                                 max_dist = 0.5,\n                                 distance_col = \"distance\") |> \n  relocate(Sepal.Length.x, .after = Sepal.Length.y) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining by: \"Sepal.Length\"\n```\n:::\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| Sepal.Width| Petal.Length| Petal.Width|Species | Sepal.Length.y| Sepal.Length.x| Type| distance|\n|-----------:|------------:|-----------:|:-------|--------------:|--------------:|----:|--------:|\n|         3.5|          1.4|         0.2|setosa  |              5|            5.1|    1|      0.1|\n|         3.0|          1.4|         0.2|setosa  |              5|            4.9|    1|      0.1|\n|         3.2|          1.3|         0.2|setosa  |              5|            4.7|    1|      0.3|\n|         3.1|          1.5|         0.2|setosa  |              5|            4.6|    1|      0.4|\n|         3.6|          1.4|         0.2|setosa  |              5|            5.0|    1|      0.0|\n|         3.9|          1.7|         0.4|setosa  |              5|            5.4|    1|      0.4|\n\n</div>\n:::\n:::\n\n\n\n<!-- End content -->\n\n\n<div id = \"footer-session-info\">\n<details>\n<summary>Session info and package versions</summary>\n::: {.cell hash='index_cache/html/unnamed-chunk-8_d940852e96ac00760d6bf757ff970562'}\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Ventura 13.4.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Chicago\n date     2023-07-08\n pandoc   3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n─ Packages ───────────────────────────────────────────────────────────────────\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n           package loadedversion       date         source\n               cli         3.6.1 2023-03-23 CRAN (R 4.3.0)\n         codetools        0.2-19 2023-02-01 CRAN (R 4.3.1)\n        colorspace         2.1-0 2023-01-23 CRAN (R 4.3.0)\n            crayon         1.5.2 2022-09-29 CRAN (R 4.3.0)\n              crul           1.3 2022-09-03 CRAN (R 4.3.1)\n              curl         5.0.0 2023-01-12 CRAN (R 4.3.0)\n            digest        0.6.31 2022-12-11 CRAN (R 4.3.0)\n             dplyr         1.1.2 2023-04-20 CRAN (R 4.3.0)\n          ellipsis         0.3.2 2021-04-29 CRAN (R 4.3.0)\n          evaluate          0.21 2023-05-05 CRAN (R 4.3.0)\n             fansi         1.0.4 2023-01-22 CRAN (R 4.3.0)\n           fastmap         1.1.1 2023-02-24 CRAN (R 4.3.0)\n fontBitstreamVera         0.1.1 2017-02-01 CRAN (R 4.3.0)\n    fontLiberation         0.1.0 2016-10-15 CRAN (R 4.3.0)\n        fontquiver         0.2.1 2017-02-01 CRAN (R 4.3.0)\n           forcats         1.0.0 2023-01-29 CRAN (R 4.3.0)\n         fuzzyjoin         0.1.6 2020-05-15 CRAN (R 4.3.0)\n           gdtools         0.3.3 2023-03-27 CRAN (R 4.3.0)\n          generics         0.1.3 2022-07-05 CRAN (R 4.3.0)\n            gfonts         0.2.0 2023-01-08 CRAN (R 4.3.0)\n           ggplot2         3.4.2 2023-04-03 CRAN (R 4.3.0)\n              glue         1.6.2 2022-02-24 CRAN (R 4.3.0)\n            gtable         0.3.3 2023-03-21 CRAN (R 4.3.0)\n               hms         1.1.3 2023-03-21 CRAN (R 4.3.0)\n         htmltools         0.5.5 2023-03-23 CRAN (R 4.3.0)\n       htmlwidgets         1.6.2 2023-03-17 CRAN (R 4.3.0)\n          httpcode         0.3.0 2020-04-10 CRAN (R 4.3.0)\n            httpuv        1.6.11 2023-05-11 CRAN (R 4.3.0)\n          jsonlite         1.8.7 2022-12-06 CRAN (R 4.3.0)\n             knitr          1.43 2023-05-25 CRAN (R 4.3.0)\n             later         1.3.1 2023-05-02 CRAN (R 4.3.0)\n         lifecycle         1.0.3 2022-10-07 CRAN (R 4.3.0)\n         lubridate         1.9.2 2023-02-10 CRAN (R 4.3.0)\n          magrittr         2.0.3 2022-03-30 CRAN (R 4.3.0)\n              mime          0.12 2021-09-28 CRAN (R 4.3.0)\n           munsell         0.5.0 2018-06-12 CRAN (R 4.3.0)\n            pillar         1.9.0 2023-03-22 CRAN (R 4.3.0)\n         pkgconfig         2.0.3 2019-09-22 CRAN (R 4.3.0)\n          promises       1.2.0.1 2021-02-11 CRAN (R 4.3.0)\n             purrr         1.0.1 2023-01-10 CRAN (R 4.3.0)\n                R6         2.5.1 2021-08-19 CRAN (R 4.3.0)\n              ragg         1.2.5 2023-01-12 CRAN (R 4.3.0)\n              Rcpp        1.0.10 2023-01-22 CRAN (R 4.3.0)\n             readr         2.1.4 2023-02-10 CRAN (R 4.3.0)\n              renv        0.17.3 2023-04-06 CRAN (R 4.3.0)\n             rlang         1.1.1 2023-04-28 CRAN (R 4.3.0)\n         rmarkdown          2.22 2023-03-26 CRAN (R 4.3.0)\n        rstudioapi          0.14 2022-08-22 CRAN (R 4.3.0)\n            scales         1.2.1 2022-08-20 CRAN (R 4.3.0)\n       sessioninfo         1.2.2 2021-12-06 CRAN (R 4.3.0)\n             shiny         1.7.4 2022-12-15 CRAN (R 4.3.0)\n        stringdist        0.9.10 2022-11-07 CRAN (R 4.3.0)\n           stringi        1.7.12 2023-01-11 CRAN (R 4.3.0)\n           stringr         1.5.0 2022-12-02 CRAN (R 4.3.0)\n       systemfonts         1.0.4 2022-02-11 CRAN (R 4.3.0)\n       textshaping         0.3.6 2021-10-13 CRAN (R 4.3.0)\n            tibble         3.2.1 2023-03-20 CRAN (R 4.3.0)\n             tidyr         1.3.0 2023-01-24 CRAN (R 4.3.0)\n        tidyselect         1.2.0 2022-10-10 CRAN (R 4.3.0)\n         tidyverse         2.0.0 2023-02-22 CRAN (R 4.3.0)\n        timechange         0.2.0 2023-01-11 CRAN (R 4.3.0)\n              tzdb         0.4.0 2022-03-28 CRAN (R 4.3.0)\n              utf8         1.2.3 2023-01-31 CRAN (R 4.3.0)\n             vctrs         0.6.3 2023-04-19 CRAN (R 4.3.0)\n             withr         2.5.0 2022-03-03 CRAN (R 4.3.0)\n              xfun          0.39 2023-04-20 CRAN (R 4.3.0)\n            xtable         1.8-4 2019-04-21 CRAN (R 4.3.0)\n              yaml         2.3.7 2023-01-23 CRAN (R 4.3.0)\n```\n:::\n:::\n</details>\n</div>\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/roboto-condensed-0.3.3/css/roboto-condensed.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}